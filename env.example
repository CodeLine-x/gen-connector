# ===========================================
# Intergenerational Voice Storytelling App
# Environment Variables Configuration
# ===========================================

# ===========================================
# SUPABASE CONFIGURATION
# ===========================================
# Get these from your Supabase project dashboard
# Go to: Settings → API → Project URL & API Keys
NEXT_PUBLIC_SUPABASE_URL=https://your-project-ref.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# ===========================================
# OPENAI CONFIGURATION
# ===========================================
# Get this from OpenAI platform: https://platform.openai.com/api-keys
# Used for: AI prompts (GPT), Image generation (DALL-E)
OPENAI_API_KEY=sk-your_openai_api_key_here

# ===========================================
# ASSEMBLYAI CONFIGURATION (Real-time Speaker Diarization)
# ===========================================
# Get this from AssemblyAI platform: https://www.assemblyai.com/dashboard
# Used for: Real-time speech-to-text with speaker diarization
# Alternative to ElevenLabs for real-time processing
ASSEMBLYAI_API_KEY=your_assemblyai_api_key_here

# Client-side AssemblyAI API key (same as above, but exposed to client)
# Required for direct WebSocket connection to AssemblyAI v3 API
NEXT_PUBLIC_ASSEMBLYAI_API_KEY=your_assemblyai_api_key_here

# ===========================================
# ELEVENLABS CONFIGURATION (Batch Speaker Diarization)
# ===========================================
# Get this from ElevenLabs platform: https://elevenlabs.io/app/settings/api-keys
# Used for: High-accuracy batch speaker diarization
# Alternative to AssemblyAI for batch processing
ELEVENLABS_API_KEY=your_elevenlabs_api_key_here

# ===========================================
# VERCEL BLOB STORAGE
# ===========================================
# Get this from Vercel dashboard: Settings → Storage → Blob
# Used for: Storing audio recordings, generated images, and videos
BLOB_READ_WRITE_TOKEN=vercel_blob_rw_token_here

# ===========================================
# SITE URL CONFIGURATION
# ===========================================
# IMPORTANT: Set this to your production domain for OAuth redirects
# Development: http://localhost:3000 (or 3001 if 3000 is in use)
# Production: https://your-production-domain.com
NEXT_PUBLIC_SITE_URL=https://your-production-domain.com

# ===========================================
# SPEAKER DIARIZATION OPTIONS
# ===========================================
# Choose ONE of the following approaches:

# OPTION 1: Real-time Processing (AssemblyAI)
# - Real-time speaker identification (1-3 second delay)
# - Live diarization as you speak
# - Good for interactive conversations
# - Requires: ASSEMBLYAI_API_KEY

# OPTION 2: Batch Processing (ElevenLabs)
# - High-accuracy batch speaker diarization
# - Process entire conversation at once
# - Better for archival purposes
# - Requires: ELEVENLABS_API_KEY

# OPTION 3: Hybrid Approach
# - Use AssemblyAI for real-time feedback
# - Use ElevenLabs for final accuracy
# - Best of both worlds
# - Requires: Both API keys

# ===========================================
# OPTIONAL: ADDITIONAL CONFIGURATIONS
# ===========================================

# Database URL (if using direct database connection)
# DATABASE_URL=postgresql://postgres:[password]@db.[project-ref].supabase.co:5432/postgres

# Redis URL (if using Redis for caching)
# REDIS_URL=redis://localhost:6379

# Email service (if using custom email)
# RESEND_API_KEY=re_your_resend_api_key_here

# Analytics (if using analytics)
# NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX

# ===========================================
# DEVELOPMENT NOTES
# ===========================================
# 1. Copy this file to .env.local for local development
# 2. Never commit .env.local to version control
# 3. Set these variables in your deployment platform (Vercel, Netlify, etc.)
# 4. For production, make sure NEXT_PUBLIC_SITE_URL points to your actual domain
# 5. Google OAuth credentials are configured in Supabase Dashboard, not here

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Supabase Setup:
#    - Create a new project at https://supabase.com
#    - Run the SQL from database-schema.sql in Supabase SQL Editor
#    - Enable Google OAuth in Authentication → Providers
#    - Configure Google OAuth in Google Cloud Console
#
# 2. OpenAI Setup:
#    - Create account at https://platform.openai.com
#    - Generate API key in API Keys section
#    - Add billing information (required for API usage)
#
# 3. AssemblyAI Setup (for real-time speaker diarization):
#    - Create account at https://www.assemblyai.com
#    - Generate API key in Dashboard → API Keys
#    - Add billing information (required for API usage)
#    - Supports real-time WebSocket connections
#
# 4. ElevenLabs Setup (for batch speaker diarization):
#    - Create account at https://elevenlabs.io
#    - Generate API key in Settings → API Keys
#    - Add billing information (required for API usage)
#    - Higher accuracy for batch processing
#
# 5. Vercel Blob Setup:
#    - Deploy to Vercel or use Vercel CLI
#    - Enable Blob storage in Vercel dashboard
#    - Get the read/write token from Storage settings
#
# 6. Google OAuth Setup:
#    - Create OAuth app in Google Cloud Console
#    - Add authorized origins: your domain + localhost:3000
#    - Add redirect URI: https://your-project-ref.supabase.co/auth/v1/callback
#    - Configure credentials in Supabase Dashboard
